{"version":3,"sources":["components/footer/Footer.js","components/navigation/Navigation.js","components/Artwork/Artwork.js","components/Artist/Artist.js","components/ArtistList/ArtistList.js","pages/About.js","pages/Home.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","className","Date","getFullYear","name","NavItem","pageURI","window","location","pathname","search","liClassName","path","aClassName","disabled","href","NavDropdown","state","isToggleOn","e","preventDefault","this","setState","prevState","classDropdownMenu","console","log","id","role","data-toggle","aria-haspopup","aria-expanded","onClick","showDropdown","aria-labelledby","children","React","Component","Navigation","src","alt","width","height","Artwork","data","imgString","image","title","medium","price","Artist","artworks","map","artwork","i","key","ArtistList","match","artist","About","Home","Contact","App","component","exact","render","tagline","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc9eaf06.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.scss'\n\n\nfunction Footer(props) {\n\n    return (\n        <div className=\"footer\">\n            <p className=\"footer-item\">\n                Â© {(new Date().getFullYear())} {props.name} | All Rights Reserved\n            </p>\n        </div>\n    )\n}\n\nexport default Footer","import React from \"react\";\nimport \"./Navigation.scss\";\n\nconst NavItem = props => {\n  const pageURI = window.location.pathname + window.location.search;\n  const liClassName = props.path === pageURI ? \"nav-item active\" : \"nav-item\";\n  const aClassName = props.disabled ? \"nav-link disabled\" : \"nav-link\";\n  return (\n    <li className={liClassName}>\n      <a href={props.path} className={aClassName}>\n        {props.name}\n        {props.path === pageURI ? (\n          <span className=\"sr-only\">(current)</span>\n        ) : (\n          \"\"\n        )}\n      </a>\n    </li>\n  );\n};\n\nclass NavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: false\n    };\n  }\n  showDropdown(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n  render() {\n    const classDropdownMenu = \"dropdown-menu\" + (this.state.isToggleOn ? \" show\" : \"\");\n    console.log('call nav')\n    return (\n      <li className=\"nav-item dropdown\">\n        <a\n          className=\"nav-link dropdown-toggle\"\n          href=\"/\"\n          id=\"navbarDropdown\"\n          role=\"button\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onClick={e => {\n            this.showDropdown(e);\n          }}\n        >\n          {this.props.name}\n        </a>\n        <div className={classDropdownMenu} aria-labelledby=\"navbarDropdown\">\n          {this.props.children}\n        </div>\n      </li>\n    );\n  }\n}\n\nfunction Navigation(props) {\n  return (\n    <nav className=\"navbar navbar-expand\">\n      <a className=\"navbar-brand\" href=\"/\">\n        <img src=\"/images/DP.png\" alt=\"DP logo\" width=\"30px\" height=\"auto\"/>\n      </a>\n\n      <div className=\"navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          \n          {/* <NavItem path=\"/\" name=\"Home\" /> */}\n          <NavItem path=\"/about\" name=\"About\" />\n          <NavDropdown name=\"Artists\">\n            <a className=\"dropdown-item\" href=\"/Artist1\">\n              Artist 1\n            </a>\n            <a className=\"dropdown-item\" href=\"/Artist2\">\n              Artist 2\n            </a>\n            <a className=\"dropdown-item\" href=\"/Artist3\">\n              Artist 3\n            </a>\n          </NavDropdown>\n          <NavItem path=\"/contact\" name=\"Contact\" />\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react'\nimport './Artwork.scss'\n\nfunction Artwork({data}) {\n  console.log(data)\n  let imgString = `/images/${data.image}`\n  return (\n    <div className=\"col-6 artwork\">\n      <img src={imgString}  alt={data.title} height=\"100\" width=\"100\"/>\n      <h6>{data.title}</h6>\n      <p>{data.medium} - ${data.price}</p>\n    </div>\n  );  \n}\n\nexport default Artwork\n","import React from \"react\";\nimport \"./Artist.scss\";\nimport Artwork from \"../Artwork/Artwork\";\n\nfunction Artist({data}) {\n  console.log(data)\n  return (\n    <div className=\"col-12 artist\">\n      <h4>{data.name}</h4>\n      <div className=\"row artworks\">\n          {data.artworks.map((artwork, i) => {\n            return (\n              <Artwork className=\"col-6\" data={artwork} key={i}></Artwork>\n            )\n          })}\n        </div>\n      {/* <Artwork name={name} link={\"/artwork/\" + id} /> */}\n    </div>\n  );\n}\n\nexport default Artist;\n","import React from \"react\";\nimport Artist from \"../Artist/Artist\";\n\nfunction ArtistList({match, data}) {\nconsole.log('call artistList')\n  console.log(match, data)\n  return (\n    <div className=\"artist-list\">\n      <div className=\"row artists\">\n          {data.map((artist, i) => {\n            return (\n              <Artist className=\"col-6 artist-listed\" data={artist} key={i}></Artist>\n            )\n          })}\n        </div>\n    </div>\n  );\n}\n\nexport default ArtistList;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <h4>About </h4>\n\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <img src=\"images/IMG_2791.JPG\" alt=\"IMG_2791\" height=\"auto\" width=\"100%\"/>  \n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction Contact() {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h4>Contact </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport data from \"./data.json\";\nimport \"./App.scss\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer.js\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport ArtistList from \"./components/ArtistList/ArtistList.js\";\nimport Artist from \"./components/Artist/Artist.js\";\n\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport Contact from \"./pages/Contact\";\n\n\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  console.log('call app')\n  return (\n    <div className=\"container\">\n      {/* <Header name=\"DP Fine Art\" tagline=\"Fine American Contemporary Artworks\" /> */}\n      <Navigation></Navigation>\n      <main>\n        {/* <div className=\"container\"> */}\n        <Switch>\n          <Route path=\"/\" component={Home} exact/>\n          {/* <Route path='/artists' component={ArtistList}/> */}\n          <Route exact path='/artists' render={props => <ArtistList {...props} data={data}></ArtistList>}/>\n          <Route exact path=\"/artist/:id\" component={Artist}/>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n        {/* </div> */}\n        \n      </main>\n\n      <Footer name=\"DP Fine Arts\" tagline=\"c'est la vie\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}